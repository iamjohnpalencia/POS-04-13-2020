<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBoxAttachment.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAqPSURBVHhe7ds9q1bZHYZxQwRfsMkUx0YipBNiESRkaju/
        RCCt0x0tZmAghJBvkZRaJF0KRTSFgoWgVpbaHN/tFNGjzcne5n/keHI548t61r2f/VwX/LCeve615qgz
        e8zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMdvf0
        6dMDT548+dPw678HDwZvB1tavFevXv2tjsGsf8+ePfvjMMQnu4epPt6+fbv1+vXrv9ZxmPVpGN8vh3/r
        /2P3INXX+ACMNjc3fQSsX8P4/r57jOpv+wHwEbBu1Y/9Hwzx8ePHWw8fPtx68OCBOtr5AIzevHnjI2CL
        a7jo+4cL//73/OPFp2Gqj90PgI+ALbThwo9/2v/u8j969AhHqX7oARj5CNhCGi7++Fd9Xv6JoMu/zUfA
        mjdc/gf+2D8ddPF38hGwpg0PwFsaojLo0u/mI2DN8t/+00IXnvgIWJP8q75pocv+MT4C9tXRCJVDF/2n
        +AjYV0UjVA5d8p/jI2BfHI1QOXTBP4WPgH1RNELl0OX+VD4C9tnRCJVDF/tz+AjYZ0UjVA5d6s/lI2Cf
        HI1QOXShv4SPgH1SNELl0GX+Uj4C9rPRCJVDF/lr+AjYT0YjVA5d4q/lI2AfjUaoHLrALfgIGEYjVA5d
        3lZ8BOz/ohEqhy5uSz4C9kE0QuXQpW3NR8DeRyNUDl3YRfARsHfRCJVDl3VRfATMB2Bi6KIuko/Aikcj
        VA5d0kXzEVjhaITKoQvag4/AikYjVA5dzl58BFYwGqFy6GL25COwYtEIlUOXsjcfgRWKRqgcupAJPgIr
        Eo1QOXQZU3wEViAaoXLoIib5CMw8GqFy6BKm+QjMOBqhcugCToGPwEyjESqHLt9U+AjMMBqhcujiTYmP
        wMyiESqHLt3U+AjMKBqhcujCTZGPwEyiESqHLttU+QjMIBqhcuiiTZmPwJJHI1QOXbKp8xFY4miEyqEL
        tgx8BJY0GqFy6HItCx+BJYxGqBy6WMvER2DJohEqhy7VsvERWKJohMrZ3NzES7VsfASWJBqhcl68eIEX
        ahkNj8BfamY21WiEyqLLtKx8BCYeDVA5t2/fxou0zHwEJhyNUDmXLl2a1W8DtvkITDQaoXIuX768dfPm
        TbxEy85HYILRCJVz/fr1rQsXLmzdu3cPL9Gy29zc9BGYUjRC5dy5c+fdAzDnR+DVq1d/rvlZOhqhcjY2
        Nt79NmD7ERh/OzDHPxN4+fKlj8AUohEqa+dPAaOLFy+++9uB+/fvbz1//nw2/7HQ8LD5HwulowEq78aN
        Gx88AnMx/kSz85+zZmipdh6GpmP8t/1cH4Fbt269/+esGVqqnaPT9Iy/Hdj5ZwJzsf0I1Awt1e7BaXrG
        nwbGh2D8K8IrV668+zMBulTLZnwEaoaWigYn9VIztFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIz
        tFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIz
        tFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYci9VIz
        tFR0KFIvNUNLRYci9VIztFR0KFIvNUNLRYeStL6+rgWib55UM7RUdChJNFq1Q988qWZoqehQkmi0aoe+
        eVLN0FLRoSTRaNUOffOkmqGlokNJotGqHfrmSTVDS0WHkkSjVTv0zZNqhpaKDiWJRqt26Jsn1QwtFR1K
        Eo1W7dA3T6oZWio6lCQardqhb55UM7RUdChJNFq1Q988qWZoqehQkmi0aoe+eVLN0FLRoSTRaNUOffOk
        mqGlokOReqkZWio6FKmXmqGlokOReqkZWio6FKmXmqGlokOReqkZWio6FKmXmqGlokOReqkZWio6FKmX
        mqGlokOReqkZWio6FKmXmqGlokOReqkZWio6FKmXmqGlokNJov+BRe3QN0+qGVoqOpQkGq3aoW+eVDO0
        VHQoSTRatUPfPKlmaKnoUJJotGqHvnlSzdBS0aEk0WjVDn3zpJqhpaJDSaLRqh365kk1Q0tFh5JEo1U7
        9M2TaoaWig4liUarduibJ9UMLRUdShKNVu3QN0+qGVoqOpQkGq3aoW+eVDO0VHQoSTRatUPfPKlmaKno
        UJJotGqHvnlSzdBS0aFIvdQMLRUditRLzdBS0aFIvdQMLRUditRLzdBS0aFIvdQMLRUditRLzdBS0aFI
        vdQMLRUditRLzdBS0aFIvdQMLRUditRLzdBS0aFIvdQMLRUditRLzdBS0aEk0f/AonbomyfVDC0VHUoS
        jVbt0DdPqhlaKjqUJBqt2qFvnlQztFR0KEk0WrVD3zypZmip6FCSaLRqh755Us3QUtGhJNFo1Q5986Sa
        oaWiQ0mi0aod+uZJNUNLRYeSRKNVO/TNk2qGlooOJYlGq3bomyfVDC0VHUoSjVbt0DdPqhlaKjqUJBqt
        2qFvnlQztFR0KEk0WrVD3zypZmip6FCkXmqGlooOReqlZmip6FCkXmqGlooOReqlZmip6FCkXmqGlooO
        ReqlZmip6FCkXmqGlooOReqlZmip6FCkXmqGlooOReqlZmip6FCkXmqGlooOReqlZmip6FCS6H9gWSX0
        TeasZmip6FCS6FKsEvomc1YztFR0KEl0KVYJfZM5qxlaKjqUJLoUq4S+yZzVDC0VHUoSXYpVQt9kzmqG
        looOJYkuxSqhbzJnNUNLRYeSRJdildA3mbOaoaWiQ0miS7FK6JvMWc3QUtGhJNGlWCX0TeasZmip6FCS
        6FKsEvomc1YztFR0KEl0KVYJfZM5qxlaKjqUJLoUq4S+yZzVDC0VHYrUS83QUtGhSL3UDC0VHYrUS83Q
        UtGhSL3UDC0VHYrUS83QUtGhSL3UDC0VHYrUS83QUtGhSL3UDC0VHYrUS83QUtGhSL3UDC0VHYrUS83Q
        UtGhSL3UDC0VHYrUS83QUtGhSL3UDC0VHYrUS83QUtGhSL3UDC0VHYrUS83QUtGhSL3UDC3VxsbGWzoY
        adGG7b2pGVqqe/fuPaLDkRbt7t27D2uGluratWv/ocORFu3q1atXaoaW6rvvvvuRDkdatHF7NUNLtba2
        9ofhtwFP6YCkRRk3d/jw4W9rhhbst+vr69/TIUmLcubMmR/G7f1vgpbsN4MT586d+ycdlNTa+fPn/zVu
        rrZnyY4dO/bN8MuJgwcP/n48GDowqZXxXzTj1sbNHT9+fNyeJTt58uQvhl+OD8YX+cTZs2d/8M8E1Nrd
        u3efDj/2f7+9s3Fzp06dGrdn6Y4cOfKr4Zftgzmxtrb27enTp38c/5pm/Lta/2Mhfa5xM+N2xg2NWxo3
        tXNjR48eHTdnU2n4sezXwy/vD0halEOHDo1bs6m1b98+HwEt1P79+738U254BMYfzd7/mYDUyPEDBw74
        Y/8ytHfv3vEPZ8Y/oR3/mmb8u9rfDehQpY8ZNzNuZ9zQN7UpMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
        MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzOzT2zPnv8C3rGzfF+u/MEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="TextBoxAttatchment.Text" xml:space="preserve">
    <value>iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAGuElEQVR42u3dP2wU2R3A8d8ua8ZejFkiefnj5VBcIFFAcU0kCoii9NFJRCQuUiSioIsslIhL7kikU3JKBJcGUCJaChOqtImUg4ZUaVxYprgEsGXt+ogxctb7x55Jg9HpkkicYL3e8efT2a7evDdfvxmv/CIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAN1HI46Dq9fpIlmXfKxQK70XEuxFRjYgh0917+/fv/1W5XP6ZKzEYSnkbUKPR+EGWZb8pFAqHTG8fFlSp9P76+no6MjLygashANv5W39PlmV/yLLsh6a1v/bs2fPzVqsVw8PDIiAA2+b3hULBzb9DFItFERCAbd32/+iL30vTNNI0jSzLzHIfI9ButyNJEhHYoQb+JeDS0tJwsVj8Z0Qc2rrxNzc3zWyfVKvV//pelmUfiYAdQK98f+vm39zcjDRNzepO+y1TKNgJCEDPtpnvuflFgN27A3h363kfEWD3BaDqmV8E2KUBSNPUJ/xEgF0cALMoAuzWAPg7vwiwu98BIAIIACKAACACCAAigAAgAggAIoAAIAIIACKAACACAuASIAICACIgACACAgAiIAAgAgIAIiAAIAICACIgACACAgAiIAAgAgIAIiAAIAICACIgACACAgAiIAAgAgIAIiAAIAICACIgACACAgAiIAAgAgIAIiAAIAICACIgACACAgAiIADsHGmaRrFYFAEBYDfqdDoxPDycl51AmiTJVQGA1/TixYtcBOBlBD58uRO4KgDwGhqNRlSr1Ty9E8h1BASAt2p5eTlarVZudgF5j4AA8FYVi8V49OhRnD59OlfjymsEBIC3qlwuR6PRiKdPn8axY8dyF4GXu5urAgD/w4EDB2J1dTXm5+cjInIXgWKx+GGz2UzL5fIvBQC+ZGxsLIaGhqLb7cb8/HysrKzEiRMncvVOoFQq/WJtbS1GR0cHPgKFQR/AwsJC5rbbWZ4/fx5Pnjz54tY5Dh06FOPj4zE2NhZJkgz8h4UiIlqt1kdjY2MfCIAA8CWLi4vx7Nmz3I2rWq3G4cOHX31dq9UG+h7yCEBPHD16NCIidxFoNBqvdjTeAcD/21oWCjExMRH79u2LpaWl6Ha7uRlbvV6PiMhFBASAnqpUKq/+MrC6uhrr6+vR7XYjy7JcREAA4DV2A5VKJSqVioshAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgAIAAAAIACAAgACAAgAAAAsAbuX79uovQQ9PT0y6CAAACAAgAIACAAAACAAgAIACAAAACAAgA7HaFQR/AwsJCZhrpl1qtNtD3kB0AeAQABAAQAEAAAAEABAAQAEAAAAEABAAQAJwL0GvOBRAAQAAAAQAEABAAQAAAAQAEABAAQAAAAQCcCwBvwrkAgAAAAgAIACAAgAAAAgAIACAAgAAAAgAIwOBzLkBvORdAAAABAAQAEABAAAABAAQAEABAAAABAAQAcC4AvAnnAgACAAgAIACAAAACAAgAIACAAAACAAgAIACDb7efC+D/9gsAIACAAAACAAgAIACAAAACAAgAIACAAAA951wAeAPOBQAEABAAQAAAAQAEABAAQAAAAQAEABAAQAAAAQAEABAAQAAAAQAEYEuapt1isThkKunD2usIQJ91u93PkyQ5Yjmy3TqdzucC0GeLi4tzk5OTAkBf1p4A9NnMzMxfr1y58i3Lke129+7dTwd9DAP/X4Gr1eo3Hj58+KckSaqWJNul3W43zpw58516vf43O4A+ajQa/75x48Yn09PTv7Ys2S43b978Xb1eX7MD6L/JiDh4586dn547d+67lia99uDBg3tTU1MfR8RKRHwmAH108uTJr83NzX29XC4Xb9++/ZOzZ8+et0Tplfv37//x4sWLv202m+mpU6f+MTs7+y+PAH105MiRlbm5uYlms7l3amrq48uXL//90qVLP/ZOgLep1Wo1bt269cm1a9f+/PJbnVqttjI7O+sRoN9qtdrBhYWFya2vq9Xq0Pnz57994cKFb05MTJzcu3fvuA8L8VWkadrtdDrLi4uLczMzM5/eu3fvL41Go7v18+PHj3/2+PHjFe8AdohyufxOs9kct3TptdHR0eW1tbUneRhLIU8TkyTJO+12WwTomeHh4eVWq/UkL+Mp5G2CkiQ52G63axGx13LlLeqMjIwsrK+vr+RpUIU8zlSpVCpsbGwcjIhKRJQjYigiitYwX+U1QER0I6IZEc9LpdLKxsaGo+gBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDX9h9tdHLrdAH1egAAAABJRU5ErkJggg==</value>
  </data>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>401, 8</value>
  </metadata>
  <metadata name="BackgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>7, 8</value>
  </metadata>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>170, 8</value>
  </metadata>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>259, 8</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>41</value>
  </metadata>
</root>